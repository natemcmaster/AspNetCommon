trigger:
  branches:
    include:
      - 'main'
      - 'release/*'
    exclude:
      - gh-pages

pr:
- '*'

variables:
- group: AzureKeyVault
- name: BUILD_NUMBER
  value: $[counter('buildnumber', 1)]

jobs:
- job: Build
  strategy:
    matrix:
      Linux:
        vmImage: ubuntu-16.04
      MacOS:
        vmImage: macOS-latest
      Windows:
        vmImage: windows-2019
  pool:
    vmImage: $(vmImage)
  steps:
  - task: UseDotNet@2
    displayName: Install .NET Core 3.1 SDK
    inputs:
      version: '3.1.x'
      packageType: sdk
  - task: UseDotNet@2
    displayName: Install .NET Core 2.1 runtime
    inputs:
      version: '2.1.x'
      packageType: runtime
  - powershell: ./build.ps1 -ci
    displayName: Invoke build.ps1
    env:
      KEYVAULT_CLIENT_SECRET: $(kv-access-token)
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    continueOnError: true
    inputs:
      testRunTitle: $(vmImage)
      testRunner: vstest
      testResultsFiles: '**/*.trx'
  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage results
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: coverlet/reports/Cobertura.xml
  - publish: artifacts/
    artifact: Packages
    displayName: Publish artifacts
    condition: and(succeeded(), eq('windows-2019', variables['vmImage']))
  - powershell: ./docs/generate.ps1 -NoBuild
    displayName: Generate docs
    condition: and(succeeded(), eq('windows-2019', variables['vmImage']))
  - powershell: ./docs/push.ps1 -a $(github-api-token-repo-write)
    displayName: Publish docs to GitHub Pages
    condition: |
      and(
        succeeded(),
        eq('windows-2019', variables['vmImage']),
        not(eq(variables['Build.Reason'], 'PullRequest')),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'))
